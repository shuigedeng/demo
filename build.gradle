plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.graalvm.buildtools.native' version '0.9.18'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

//***************************

//1111111111111111111111111111111111111

repositories {
    maven {
        allowInsecureProtocol = true

        credentials {
            username = System.getenv("TAOTAO_CLOUD_MAVEN_USERNAME")
            password = System.getenv("TAOTAO_CLOUD_MAVEN_PASSWORD")
        }
        url 'https://repo.rdc.aliyun.com/repository/136936-release-reey0l/'
    }

//    maven {
//        allowInsecureProtocol = true
//
//        credentials {
//            username = System.getenv("TAOTAO_CLOUD_MAVEN_USERNAME")
//            password = System.getenv("TAOTAO_CLOUD_MAVEN_PASSWORD")
//        }
//        url 'https://repo.rdc.aliyun.com/repository/136936-snapshot-hglDf2/'
//    }

    mavenCentral()
}

dependencies {
    implementation platform("io.github.shuigedeng:taotao-cloud-dependencies:2023.01")

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'mysql:mysql-connector-java'

    implementation 'org.springframework.boot:spring-boot-starter-aop'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'io.micrometer:micrometer-core:1.10.2'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'

//    implementation "io.github.shuigedeng:taotao-cloud-starter-common"
//    implementation "io.github.shuigedeng:taotao-cloud-starter-core"
//    implementation "io.github.shuigedeng:taotao-cloud-starter-logger"
//    implementation "io.github.shuigedeng:taotao-cloud-starter-dingtalk"
//    implementation "io.github.shuigedeng:taotao-cloud-starter-tracing-micrometer"
//    implementation "io.github.shuigedeng:taotao-cloud-starter-tracing-skywalking"
//
//    implementation "io.github.shuigedeng:taotao-cloud-starter-facility-alibaba"
//    implementation "io.github.shuigedeng:taotao-cloud-starter-facility-tencent"
//    implementation "io.github.shuigedeng:taotao-cloud-starter-facility-zookeeper"

//    implementation "de.codecentric:spring-boot-admin-starter-server"
//
//    implementation "org.springframework.boot:spring-boot-starter-security"
//    implementation "org.springframework.boot:spring-boot-starter-mail"

    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    }
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-undertow"
    implementation "org.springframework.boot:spring-boot-autoconfigure"

}


//nativeBuild {
////    buildArgs = ["--initialize-at-run-time=org.apache.commons.logging.LogFactoryService,org.apache.commons.logging.LogFactory"]
//    buildArgs = ["--no-fallback",
//                 "--initialize-at-build-time=org.springframework.util.unit.DataSize",
//                 "--initialize-at-build-time=org.slf4j.MDC",
//                 "--initialize-at-build-time=ch.qos.logback.classic.Level",
//                 "--initialize-at-build-time=ch.qos.logback.classic.Logger",
//                 "--initialize-at-build-time=ch.qos.logback.core.util.StatusPrinter",
//                 "--initialize-at-build-time=ch.qos.logback.core.status.StatusBase",
//                 "--initialize-at-build-time=ch.qos.logback.core.status.InfoStatus",
//                 "--initialize-at-build-time=ch.qos.logback.core.spi.AppenderAttachableImpl",
//                 "--initialize-at-build-time=org.slf4j.LoggerFactory",
//                 "--initialize-at-build-time=ch.qos.logback.core.util.Loader",
//                 "--initialize-at-build-time=org.slf4j.impl.StaticLoggerBinder",
//                 "--initialize-at-build-time=ch.qos.logback.classic.spi.ThrowableProxy",
//                 "--initialize-at-build-time=ch.qos.logback.core.CoreConstants",
//                 "--initialize-at-build-time=java.net.Inet6Address",
//                 "--report-unsupported-elements-at-runtime",
//                 "--allow-incomplete-classpath",
//                 "--trace-class-initialization=org.apache.commons.logging.LogFactory,org.apache.commons.logging.LogFactoryService",
//                 "-H:+ReportExceptionStackTraces",
//                 "--trace-object-instantiation=java.net.Inet6Address"
//    ]
//}


tasks.named('test') {
    useJUnitPlatform()
}


bootBuildImage {
    imageName = "registry.cn-hangzhou.aliyuncs.com/taotao-cloud-project/taotao-cloud-demo:2023.1.2"
    pullPolicy = "IF_NOT_PRESENT"
    cleanCache = true
    verboseLogging = true
    publish = true

    docker {
        //使用docker
        //host = "tcp://127.0.0.1:2376"
        //tlsVerify = true
        //certPath = "/home/users/.minikube/certs"

        //使用podman @since 2.7.0
        //host = "unix:///run/user/1000/podman/podman.sock"
        //bindHostToBuilder = true

        publishRegistry {
            username = findProperty("TAOTAO_CLOUD_REGISTRY_USERNAME") ?: System.getenv("TAOTAO_CLOUD_REGISTRY_USERNAME")
            password = findProperty("TAOTAO_CLOUD_REGISTRY_PASSWORD") ?: System.getenv("TAOTAO_CLOUD_REGISTRY_PASSWORD")
            url = "registry.cn-hangzhou.aliyuncs.com"
        }
    }
}
